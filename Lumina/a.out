## LAYOUTS DEFINITION ##
0 2 5126
1 2 5126

## CONSTANTS DEFINITION ##

## ATTRIBUTES DEFINITION ##
propertiesType properties 16 16 {
    color 0 16 0 16 {
        r 0 4 0 4 {}
        g 4 4 4 4 {}
        b 8 4 8 4 {}
        a 12 4 12 4 {}
        rgb 0 12 0 12 {}
        rgba 0 16 0 16 {}
    }
};

## TEXTURES DEFINITION ##
texture 0

## VERTEX SHADER CODE ##
layout(location = 0) in vec2 modelPosition;

layout(location = 1) in vec2 modelUV;

layout(location = 0) out vec2 fragmentUV;

layout(attribute) uniform propertiesType {
    Color color;
} properties;


void main(){
    pixelPosition = Vector4(modelPosition, 0.0, 1.0);
    fragmentUV = modelUV;
}

## FRAGMENT SHADER CODE ##
layout(location = 0) in vec2 fragmentUV;

layout(attribute) uniform propertiesType {
    Color color;
} properties;


sampler2D texture;
void main(){
    Vector2 tmpUv = fragmentUV;
    pixelColor = getPixel(texture, tmpUv);
}

