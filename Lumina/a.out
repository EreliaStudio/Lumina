## LAYOUTS DEFINITION ##
in Vector2Int modelPosition
out Color pixelColor


## CONSTANTS DEFINITION ##
spk_ScreenConstants_Type spk::ScreenConstants 64 64 {
    canvasMVP 0 64 0 64 1 16 {}
}


## ATTRIBUTES DEFINITION ##
self_Type self 20 20 {
    color 0 16 0 16 1 16 {
        r 0 4 0 4 1 0 {}
        g 4 4 4 4 1 0 {}
        b 8 4 8 4 1 0 {}
        a 12 4 12 4 1 0 {}
    }
    layer 16 4 16 4 1 0 {}
}


## TEXTURES DEFINITION ##


## VERTEX SHADER CODE ##
layout (location = 0) in ivec2 modelPosition;

layout(constants) uniform spk_ScreenConstants_Type
{
    mat4 canvasMVP;
} spk_ScreenConstants;

layout(attributes) uniform self_Type
{
    vec4 color;
    float layer;
} self;

void main()
{
    gl_Position = spk_ScreenConstants.canvasMVP * vec4((vec2)(modelPosition), self.layer, 1.0f);
}

## FRAGMENT SHADER CODE ##
layout (location = 0) out vec4 pixelColor;

layout(attributes) uniform self_Type
{
    vec4 color;
    float layer;
} self;

void main()
{
    pixelColor = self.color;
}

